openapi: '3.0.0'
info:
  version: '1.0.0'
  title: Pub API
  description: Pub API

servers:
  - url: 'localhost:7000'

paths:
  /pub/:

    # POST: Create a Pub
    post:
      summary: Create a Pub
      responses:
        201:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pub'
        400:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    # GET: Get Pub index
    get:
      summary: Get Pub index
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PubArray'
        400:
          description: Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /pub/{id}:
    parameters:
      - name: id
        description: The Pub id
        in: path
        required: true
        schema:
          $ref: '#/components/schemas/Pub_id'

    # GET: Get a Pub by id
    get:
      summary: Get a Pub
      responses:
        200:
          description: The Pub corresponding to the provided `id`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pub'
        404:
          description: No Pub found for the provided `id`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    # PUT: Update a Pub by id
    put:
      summary: Update a Pub
      responses:
        201:
          description: The Pub corresponding to the provided `id`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pub'
        404:
          description: No Pub found for the provided `id`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    # DELETE: Delete a Pub by id
    delete:
      summary: Delete a Pub
      responses:
        200:
          description: The Pub has been deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pub'
        404:
          description: No Pub found for the provided `id`
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        500:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:

    Pub_id:
      description: The unique identifier of a Pub
      type: string

    Pub:
      type: object
      required:
        - _id
        - _user_id
        - title
        - text
        - created_at
      properties:
        _id:
          $ref: '#/components/schemas/Pub_id'
        _user_id:
          type: string
        title:
          type: string
        text:
          type: string
        created_at:
          type: string
        image_path:
          type: string
        __v:
          type: number

    PubArray:
      type: array
      items:
        $ref: '#/components/schemas/Pub'

    Error:
      type: object
      required:
        - message
      properties:
        message:
          description: A human readable error message
          type: string

#  securitySchemes:
#    ApiKey:
#      type: apiKey
#      in: header
#      name: X-Api-Key

#security:
#  - ApiKey: []
